/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MarginAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarginAccount{}

// MarginAccount struct for MarginAccount
type MarginAccount struct {
	SecuritiesAccountBase
	InitialBalances *MarginInitialBalance `json:"initialBalances,omitempty"`
	CurrentBalances *MarginBalance `json:"currentBalances,omitempty"`
	ProjectedBalances *MarginBalance `json:"projectedBalances,omitempty"`
}

// NewMarginAccount instantiates a new MarginAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginAccount() *MarginAccount {
	this := MarginAccount{}
	var isDayTrader bool = false
	this.IsDayTrader = &isDayTrader
	var isClosingOnlyRestricted bool = false
	this.IsClosingOnlyRestricted = &isClosingOnlyRestricted
	var pfcbFlag bool = false
	this.PfcbFlag = &pfcbFlag
	return &this
}

// NewMarginAccountWithDefaults instantiates a new MarginAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginAccountWithDefaults() *MarginAccount {
	this := MarginAccount{}
	return &this
}

// GetInitialBalances returns the InitialBalances field value if set, zero value otherwise.
func (o *MarginAccount) GetInitialBalances() MarginInitialBalance {
	if o == nil || IsNil(o.InitialBalances) {
		var ret MarginInitialBalance
		return ret
	}
	return *o.InitialBalances
}

// GetInitialBalancesOk returns a tuple with the InitialBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccount) GetInitialBalancesOk() (*MarginInitialBalance, bool) {
	if o == nil || IsNil(o.InitialBalances) {
		return nil, false
	}
	return o.InitialBalances, true
}

// HasInitialBalances returns a boolean if a field has been set.
func (o *MarginAccount) HasInitialBalances() bool {
	if o != nil && !IsNil(o.InitialBalances) {
		return true
	}

	return false
}

// SetInitialBalances gets a reference to the given MarginInitialBalance and assigns it to the InitialBalances field.
func (o *MarginAccount) SetInitialBalances(v MarginInitialBalance) {
	o.InitialBalances = &v
}

// GetCurrentBalances returns the CurrentBalances field value if set, zero value otherwise.
func (o *MarginAccount) GetCurrentBalances() MarginBalance {
	if o == nil || IsNil(o.CurrentBalances) {
		var ret MarginBalance
		return ret
	}
	return *o.CurrentBalances
}

// GetCurrentBalancesOk returns a tuple with the CurrentBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccount) GetCurrentBalancesOk() (*MarginBalance, bool) {
	if o == nil || IsNil(o.CurrentBalances) {
		return nil, false
	}
	return o.CurrentBalances, true
}

// HasCurrentBalances returns a boolean if a field has been set.
func (o *MarginAccount) HasCurrentBalances() bool {
	if o != nil && !IsNil(o.CurrentBalances) {
		return true
	}

	return false
}

// SetCurrentBalances gets a reference to the given MarginBalance and assigns it to the CurrentBalances field.
func (o *MarginAccount) SetCurrentBalances(v MarginBalance) {
	o.CurrentBalances = &v
}

// GetProjectedBalances returns the ProjectedBalances field value if set, zero value otherwise.
func (o *MarginAccount) GetProjectedBalances() MarginBalance {
	if o == nil || IsNil(o.ProjectedBalances) {
		var ret MarginBalance
		return ret
	}
	return *o.ProjectedBalances
}

// GetProjectedBalancesOk returns a tuple with the ProjectedBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginAccount) GetProjectedBalancesOk() (*MarginBalance, bool) {
	if o == nil || IsNil(o.ProjectedBalances) {
		return nil, false
	}
	return o.ProjectedBalances, true
}

// HasProjectedBalances returns a boolean if a field has been set.
func (o *MarginAccount) HasProjectedBalances() bool {
	if o != nil && !IsNil(o.ProjectedBalances) {
		return true
	}

	return false
}

// SetProjectedBalances gets a reference to the given MarginBalance and assigns it to the ProjectedBalances field.
func (o *MarginAccount) SetProjectedBalances(v MarginBalance) {
	o.ProjectedBalances = &v
}

func (o MarginAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarginAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedSecuritiesAccountBase, errSecuritiesAccountBase := json.Marshal(o.SecuritiesAccountBase)
	if errSecuritiesAccountBase != nil {
		return map[string]interface{}{}, errSecuritiesAccountBase
	}
	errSecuritiesAccountBase = json.Unmarshal([]byte(serializedSecuritiesAccountBase), &toSerialize)
	if errSecuritiesAccountBase != nil {
		return map[string]interface{}{}, errSecuritiesAccountBase
	}
	if !IsNil(o.InitialBalances) {
		toSerialize["initialBalances"] = o.InitialBalances
	}
	if !IsNil(o.CurrentBalances) {
		toSerialize["currentBalances"] = o.CurrentBalances
	}
	if !IsNil(o.ProjectedBalances) {
		toSerialize["projectedBalances"] = o.ProjectedBalances
	}
	return toSerialize, nil
}

type NullableMarginAccount struct {
	value *MarginAccount
	isSet bool
}

func (v NullableMarginAccount) Get() *MarginAccount {
	return v.value
}

func (v *NullableMarginAccount) Set(val *MarginAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginAccount(val *MarginAccount) *NullableMarginAccount {
	return &NullableMarginAccount{value: val, isSet: true}
}

func (v NullableMarginAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


