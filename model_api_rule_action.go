/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// APIRuleAction the model 'APIRuleAction'
type APIRuleAction string

// List of APIRuleAction
const (
	APIRULEACTION_ACCEPT APIRuleAction = "ACCEPT"
	APIRULEACTION_ALERT APIRuleAction = "ALERT"
	APIRULEACTION_REJECT APIRuleAction = "REJECT"
	APIRULEACTION_REVIEW APIRuleAction = "REVIEW"
	APIRULEACTION_UNKNOWN APIRuleAction = "UNKNOWN"
)

// All allowed values of APIRuleAction enum
var AllowedAPIRuleActionEnumValues = []APIRuleAction{
	"ACCEPT",
	"ALERT",
	"REJECT",
	"REVIEW",
	"UNKNOWN",
}

func (v *APIRuleAction) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := APIRuleAction(value)
	for _, existing := range AllowedAPIRuleActionEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid APIRuleAction", value)
}

// NewAPIRuleActionFromValue returns a pointer to a valid APIRuleAction
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAPIRuleActionFromValue(v string) (*APIRuleAction, error) {
	ev := APIRuleAction(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for APIRuleAction: valid values are %v", v, AllowedAPIRuleActionEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v APIRuleAction) IsValid() bool {
	for _, existing := range AllowedAPIRuleActionEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to APIRuleAction value
func (v APIRuleAction) Ptr() *APIRuleAction {
	return &v
}

type NullableAPIRuleAction struct {
	value *APIRuleAction
	isSet bool
}

func (v NullableAPIRuleAction) Get() *APIRuleAction {
	return v.value
}

func (v *NullableAPIRuleAction) Set(val *APIRuleAction) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIRuleAction) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIRuleAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIRuleAction(val *APIRuleAction) *NullableAPIRuleAction {
	return &NullableAPIRuleAction{value: val, isSet: true}
}

func (v NullableAPIRuleAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIRuleAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

