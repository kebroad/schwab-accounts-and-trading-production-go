/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CommissionLeg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommissionLeg{}

// CommissionLeg struct for CommissionLeg
type CommissionLeg struct {
	CommissionValues []CommissionValue `json:"commissionValues,omitempty"`
}

// NewCommissionLeg instantiates a new CommissionLeg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommissionLeg() *CommissionLeg {
	this := CommissionLeg{}
	return &this
}

// NewCommissionLegWithDefaults instantiates a new CommissionLeg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommissionLegWithDefaults() *CommissionLeg {
	this := CommissionLeg{}
	return &this
}

// GetCommissionValues returns the CommissionValues field value if set, zero value otherwise.
func (o *CommissionLeg) GetCommissionValues() []CommissionValue {
	if o == nil || IsNil(o.CommissionValues) {
		var ret []CommissionValue
		return ret
	}
	return o.CommissionValues
}

// GetCommissionValuesOk returns a tuple with the CommissionValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionLeg) GetCommissionValuesOk() ([]CommissionValue, bool) {
	if o == nil || IsNil(o.CommissionValues) {
		return nil, false
	}
	return o.CommissionValues, true
}

// HasCommissionValues returns a boolean if a field has been set.
func (o *CommissionLeg) HasCommissionValues() bool {
	if o != nil && !IsNil(o.CommissionValues) {
		return true
	}

	return false
}

// SetCommissionValues gets a reference to the given []CommissionValue and assigns it to the CommissionValues field.
func (o *CommissionLeg) SetCommissionValues(v []CommissionValue) {
	o.CommissionValues = v
}

func (o CommissionLeg) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommissionLeg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommissionValues) {
		toSerialize["commissionValues"] = o.CommissionValues
	}
	return toSerialize, nil
}

type NullableCommissionLeg struct {
	value *CommissionLeg
	isSet bool
}

func (v NullableCommissionLeg) Get() *CommissionLeg {
	return v.value
}

func (v *NullableCommissionLeg) Set(val *CommissionLeg) {
	v.value = val
	v.isSet = true
}

func (v NullableCommissionLeg) IsSet() bool {
	return v.isSet
}

func (v *NullableCommissionLeg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommissionLeg(val *CommissionLeg) *NullableCommissionLeg {
	return &NullableCommissionLeg{value: val, isSet: true}
}

func (v NullableCommissionLeg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommissionLeg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


