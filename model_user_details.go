/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the UserDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDetails{}

// UserDetails struct for UserDetails
type UserDetails struct {
	CdDomainId *string `json:"cdDomainId,omitempty"`
	Login *string `json:"login,omitempty"`
	Type *string `json:"type,omitempty"`
	UserId *int64 `json:"userId,omitempty"`
	SystemUserName *string `json:"systemUserName,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	LastName *string `json:"lastName,omitempty"`
	BrokerRepCode *string `json:"brokerRepCode,omitempty"`
}

// NewUserDetails instantiates a new UserDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDetails() *UserDetails {
	this := UserDetails{}
	return &this
}

// NewUserDetailsWithDefaults instantiates a new UserDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDetailsWithDefaults() *UserDetails {
	this := UserDetails{}
	return &this
}

// GetCdDomainId returns the CdDomainId field value if set, zero value otherwise.
func (o *UserDetails) GetCdDomainId() string {
	if o == nil || IsNil(o.CdDomainId) {
		var ret string
		return ret
	}
	return *o.CdDomainId
}

// GetCdDomainIdOk returns a tuple with the CdDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetCdDomainIdOk() (*string, bool) {
	if o == nil || IsNil(o.CdDomainId) {
		return nil, false
	}
	return o.CdDomainId, true
}

// HasCdDomainId returns a boolean if a field has been set.
func (o *UserDetails) HasCdDomainId() bool {
	if o != nil && !IsNil(o.CdDomainId) {
		return true
	}

	return false
}

// SetCdDomainId gets a reference to the given string and assigns it to the CdDomainId field.
func (o *UserDetails) SetCdDomainId(v string) {
	o.CdDomainId = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *UserDetails) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *UserDetails) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *UserDetails) SetLogin(v string) {
	o.Login = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UserDetails) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UserDetails) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UserDetails) SetType(v string) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *UserDetails) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *UserDetails) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *UserDetails) SetUserId(v int64) {
	o.UserId = &v
}

// GetSystemUserName returns the SystemUserName field value if set, zero value otherwise.
func (o *UserDetails) GetSystemUserName() string {
	if o == nil || IsNil(o.SystemUserName) {
		var ret string
		return ret
	}
	return *o.SystemUserName
}

// GetSystemUserNameOk returns a tuple with the SystemUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetSystemUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUserName) {
		return nil, false
	}
	return o.SystemUserName, true
}

// HasSystemUserName returns a boolean if a field has been set.
func (o *UserDetails) HasSystemUserName() bool {
	if o != nil && !IsNil(o.SystemUserName) {
		return true
	}

	return false
}

// SetSystemUserName gets a reference to the given string and assigns it to the SystemUserName field.
func (o *UserDetails) SetSystemUserName(v string) {
	o.SystemUserName = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UserDetails) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UserDetails) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UserDetails) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UserDetails) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UserDetails) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UserDetails) SetLastName(v string) {
	o.LastName = &v
}

// GetBrokerRepCode returns the BrokerRepCode field value if set, zero value otherwise.
func (o *UserDetails) GetBrokerRepCode() string {
	if o == nil || IsNil(o.BrokerRepCode) {
		var ret string
		return ret
	}
	return *o.BrokerRepCode
}

// GetBrokerRepCodeOk returns a tuple with the BrokerRepCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetails) GetBrokerRepCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BrokerRepCode) {
		return nil, false
	}
	return o.BrokerRepCode, true
}

// HasBrokerRepCode returns a boolean if a field has been set.
func (o *UserDetails) HasBrokerRepCode() bool {
	if o != nil && !IsNil(o.BrokerRepCode) {
		return true
	}

	return false
}

// SetBrokerRepCode gets a reference to the given string and assigns it to the BrokerRepCode field.
func (o *UserDetails) SetBrokerRepCode(v string) {
	o.BrokerRepCode = &v
}

func (o UserDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CdDomainId) {
		toSerialize["cdDomainId"] = o.CdDomainId
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	if !IsNil(o.SystemUserName) {
		toSerialize["systemUserName"] = o.SystemUserName
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.BrokerRepCode) {
		toSerialize["brokerRepCode"] = o.BrokerRepCode
	}
	return toSerialize, nil
}

type NullableUserDetails struct {
	value *UserDetails
	isSet bool
}

func (v NullableUserDetails) Get() *UserDetails {
	return v.value
}

func (v *NullableUserDetails) Set(val *UserDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDetails(val *UserDetails) *NullableUserDetails {
	return &NullableUserDetails{value: val, isSet: true}
}

func (v NullableUserDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


