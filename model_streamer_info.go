/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the StreamerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamerInfo{}

// StreamerInfo struct for StreamerInfo
type StreamerInfo struct {
	StreamerSocketUrl *string `json:"streamerSocketUrl,omitempty"`
	SchwabClientCustomerId *string `json:"schwabClientCustomerId,omitempty"`
	SchwabClientCorrelId *string `json:"schwabClientCorrelId,omitempty"`
	SchwabClientChannel *string `json:"schwabClientChannel,omitempty"`
	SchwabClientFunctionId *string `json:"schwabClientFunctionId,omitempty"`
}

// NewStreamerInfo instantiates a new StreamerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamerInfo() *StreamerInfo {
	this := StreamerInfo{}
	return &this
}

// NewStreamerInfoWithDefaults instantiates a new StreamerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamerInfoWithDefaults() *StreamerInfo {
	this := StreamerInfo{}
	return &this
}

// GetStreamerSocketUrl returns the StreamerSocketUrl field value if set, zero value otherwise.
func (o *StreamerInfo) GetStreamerSocketUrl() string {
	if o == nil || IsNil(o.StreamerSocketUrl) {
		var ret string
		return ret
	}
	return *o.StreamerSocketUrl
}

// GetStreamerSocketUrlOk returns a tuple with the StreamerSocketUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamerInfo) GetStreamerSocketUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StreamerSocketUrl) {
		return nil, false
	}
	return o.StreamerSocketUrl, true
}

// HasStreamerSocketUrl returns a boolean if a field has been set.
func (o *StreamerInfo) HasStreamerSocketUrl() bool {
	if o != nil && !IsNil(o.StreamerSocketUrl) {
		return true
	}

	return false
}

// SetStreamerSocketUrl gets a reference to the given string and assigns it to the StreamerSocketUrl field.
func (o *StreamerInfo) SetStreamerSocketUrl(v string) {
	o.StreamerSocketUrl = &v
}

// GetSchwabClientCustomerId returns the SchwabClientCustomerId field value if set, zero value otherwise.
func (o *StreamerInfo) GetSchwabClientCustomerId() string {
	if o == nil || IsNil(o.SchwabClientCustomerId) {
		var ret string
		return ret
	}
	return *o.SchwabClientCustomerId
}

// GetSchwabClientCustomerIdOk returns a tuple with the SchwabClientCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamerInfo) GetSchwabClientCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.SchwabClientCustomerId) {
		return nil, false
	}
	return o.SchwabClientCustomerId, true
}

// HasSchwabClientCustomerId returns a boolean if a field has been set.
func (o *StreamerInfo) HasSchwabClientCustomerId() bool {
	if o != nil && !IsNil(o.SchwabClientCustomerId) {
		return true
	}

	return false
}

// SetSchwabClientCustomerId gets a reference to the given string and assigns it to the SchwabClientCustomerId field.
func (o *StreamerInfo) SetSchwabClientCustomerId(v string) {
	o.SchwabClientCustomerId = &v
}

// GetSchwabClientCorrelId returns the SchwabClientCorrelId field value if set, zero value otherwise.
func (o *StreamerInfo) GetSchwabClientCorrelId() string {
	if o == nil || IsNil(o.SchwabClientCorrelId) {
		var ret string
		return ret
	}
	return *o.SchwabClientCorrelId
}

// GetSchwabClientCorrelIdOk returns a tuple with the SchwabClientCorrelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamerInfo) GetSchwabClientCorrelIdOk() (*string, bool) {
	if o == nil || IsNil(o.SchwabClientCorrelId) {
		return nil, false
	}
	return o.SchwabClientCorrelId, true
}

// HasSchwabClientCorrelId returns a boolean if a field has been set.
func (o *StreamerInfo) HasSchwabClientCorrelId() bool {
	if o != nil && !IsNil(o.SchwabClientCorrelId) {
		return true
	}

	return false
}

// SetSchwabClientCorrelId gets a reference to the given string and assigns it to the SchwabClientCorrelId field.
func (o *StreamerInfo) SetSchwabClientCorrelId(v string) {
	o.SchwabClientCorrelId = &v
}

// GetSchwabClientChannel returns the SchwabClientChannel field value if set, zero value otherwise.
func (o *StreamerInfo) GetSchwabClientChannel() string {
	if o == nil || IsNil(o.SchwabClientChannel) {
		var ret string
		return ret
	}
	return *o.SchwabClientChannel
}

// GetSchwabClientChannelOk returns a tuple with the SchwabClientChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamerInfo) GetSchwabClientChannelOk() (*string, bool) {
	if o == nil || IsNil(o.SchwabClientChannel) {
		return nil, false
	}
	return o.SchwabClientChannel, true
}

// HasSchwabClientChannel returns a boolean if a field has been set.
func (o *StreamerInfo) HasSchwabClientChannel() bool {
	if o != nil && !IsNil(o.SchwabClientChannel) {
		return true
	}

	return false
}

// SetSchwabClientChannel gets a reference to the given string and assigns it to the SchwabClientChannel field.
func (o *StreamerInfo) SetSchwabClientChannel(v string) {
	o.SchwabClientChannel = &v
}

// GetSchwabClientFunctionId returns the SchwabClientFunctionId field value if set, zero value otherwise.
func (o *StreamerInfo) GetSchwabClientFunctionId() string {
	if o == nil || IsNil(o.SchwabClientFunctionId) {
		var ret string
		return ret
	}
	return *o.SchwabClientFunctionId
}

// GetSchwabClientFunctionIdOk returns a tuple with the SchwabClientFunctionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamerInfo) GetSchwabClientFunctionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SchwabClientFunctionId) {
		return nil, false
	}
	return o.SchwabClientFunctionId, true
}

// HasSchwabClientFunctionId returns a boolean if a field has been set.
func (o *StreamerInfo) HasSchwabClientFunctionId() bool {
	if o != nil && !IsNil(o.SchwabClientFunctionId) {
		return true
	}

	return false
}

// SetSchwabClientFunctionId gets a reference to the given string and assigns it to the SchwabClientFunctionId field.
func (o *StreamerInfo) SetSchwabClientFunctionId(v string) {
	o.SchwabClientFunctionId = &v
}

func (o StreamerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StreamerSocketUrl) {
		toSerialize["streamerSocketUrl"] = o.StreamerSocketUrl
	}
	if !IsNil(o.SchwabClientCustomerId) {
		toSerialize["schwabClientCustomerId"] = o.SchwabClientCustomerId
	}
	if !IsNil(o.SchwabClientCorrelId) {
		toSerialize["schwabClientCorrelId"] = o.SchwabClientCorrelId
	}
	if !IsNil(o.SchwabClientChannel) {
		toSerialize["schwabClientChannel"] = o.SchwabClientChannel
	}
	if !IsNil(o.SchwabClientFunctionId) {
		toSerialize["schwabClientFunctionId"] = o.SchwabClientFunctionId
	}
	return toSerialize, nil
}

type NullableStreamerInfo struct {
	value *StreamerInfo
	isSet bool
}

func (v NullableStreamerInfo) Get() *StreamerInfo {
	return v.value
}

func (v *NullableStreamerInfo) Set(val *StreamerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamerInfo(val *StreamerInfo) *NullableStreamerInfo {
	return &NullableStreamerInfo{value: val, isSet: true}
}

func (v NullableStreamerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


