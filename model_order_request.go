/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"time"
)

// checks if the OrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderRequest{}

// OrderRequest struct for OrderRequest
type OrderRequest struct {
	Session *Session `json:"session,omitempty"`
	Duration *Duration `json:"duration,omitempty"`
	OrderType *OrderTypeRequest `json:"orderType,omitempty"`
	CancelTime *time.Time `json:"cancelTime,omitempty"`
	ComplexOrderStrategyType *ComplexOrderStrategyType `json:"complexOrderStrategyType,omitempty"`
	Quantity *float64 `json:"quantity,omitempty"`
	FilledQuantity *float64 `json:"filledQuantity,omitempty"`
	RemainingQuantity *float64 `json:"remainingQuantity,omitempty"`
	DestinationLinkName *string `json:"destinationLinkName,omitempty"`
	ReleaseTime *time.Time `json:"releaseTime,omitempty"`
	StopPrice *float64 `json:"stopPrice,omitempty"`
	StopPriceLinkBasis *StopPriceLinkBasis `json:"stopPriceLinkBasis,omitempty"`
	StopPriceLinkType *StopPriceLinkType `json:"stopPriceLinkType,omitempty"`
	StopPriceOffset *float64 `json:"stopPriceOffset,omitempty"`
	StopType *StopType `json:"stopType,omitempty"`
	PriceLinkBasis *PriceLinkBasis `json:"priceLinkBasis,omitempty"`
	PriceLinkType *PriceLinkType `json:"priceLinkType,omitempty"`
	Price *float64 `json:"price,omitempty"`
	TaxLotMethod *TaxLotMethod `json:"taxLotMethod,omitempty"`
	OrderLegCollection []OrderLegCollection `json:"orderLegCollection,omitempty"`
	ActivationPrice *float64 `json:"activationPrice,omitempty"`
	SpecialInstruction *SpecialInstruction `json:"specialInstruction,omitempty"`
	OrderStrategyType *OrderStrategyType `json:"orderStrategyType,omitempty"`
	OrderId *int64 `json:"orderId,omitempty"`
	Cancelable *bool `json:"cancelable,omitempty"`
	Editable *bool `json:"editable,omitempty"`
	Status *Status `json:"status,omitempty"`
	EnteredTime *time.Time `json:"enteredTime,omitempty"`
	CloseTime *time.Time `json:"closeTime,omitempty"`
	AccountNumber *int64 `json:"accountNumber,omitempty"`
	OrderActivityCollection []OrderActivity `json:"orderActivityCollection,omitempty"`
	ReplacingOrderCollection []OrderRequest `json:"replacingOrderCollection,omitempty"`
	ChildOrderStrategies []OrderRequest `json:"childOrderStrategies,omitempty"`
	StatusDescription *string `json:"statusDescription,omitempty"`
}

// NewOrderRequest instantiates a new OrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderRequest() *OrderRequest {
	this := OrderRequest{}
	var cancelable bool = false
	this.Cancelable = &cancelable
	var editable bool = false
	this.Editable = &editable
	return &this
}

// NewOrderRequestWithDefaults instantiates a new OrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderRequestWithDefaults() *OrderRequest {
	this := OrderRequest{}
	var cancelable bool = false
	this.Cancelable = &cancelable
	var editable bool = false
	this.Editable = &editable
	return &this
}

// GetSession returns the Session field value if set, zero value otherwise.
func (o *OrderRequest) GetSession() Session {
	if o == nil || IsNil(o.Session) {
		var ret Session
		return ret
	}
	return *o.Session
}

// GetSessionOk returns a tuple with the Session field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetSessionOk() (*Session, bool) {
	if o == nil || IsNil(o.Session) {
		return nil, false
	}
	return o.Session, true
}

// HasSession returns a boolean if a field has been set.
func (o *OrderRequest) HasSession() bool {
	if o != nil && !IsNil(o.Session) {
		return true
	}

	return false
}

// SetSession gets a reference to the given Session and assigns it to the Session field.
func (o *OrderRequest) SetSession(v Session) {
	o.Session = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *OrderRequest) GetDuration() Duration {
	if o == nil || IsNil(o.Duration) {
		var ret Duration
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetDurationOk() (*Duration, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *OrderRequest) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given Duration and assigns it to the Duration field.
func (o *OrderRequest) SetDuration(v Duration) {
	o.Duration = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *OrderRequest) GetOrderType() OrderTypeRequest {
	if o == nil || IsNil(o.OrderType) {
		var ret OrderTypeRequest
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetOrderTypeOk() (*OrderTypeRequest, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *OrderRequest) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given OrderTypeRequest and assigns it to the OrderType field.
func (o *OrderRequest) SetOrderType(v OrderTypeRequest) {
	o.OrderType = &v
}

// GetCancelTime returns the CancelTime field value if set, zero value otherwise.
func (o *OrderRequest) GetCancelTime() time.Time {
	if o == nil || IsNil(o.CancelTime) {
		var ret time.Time
		return ret
	}
	return *o.CancelTime
}

// GetCancelTimeOk returns a tuple with the CancelTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetCancelTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CancelTime) {
		return nil, false
	}
	return o.CancelTime, true
}

// HasCancelTime returns a boolean if a field has been set.
func (o *OrderRequest) HasCancelTime() bool {
	if o != nil && !IsNil(o.CancelTime) {
		return true
	}

	return false
}

// SetCancelTime gets a reference to the given time.Time and assigns it to the CancelTime field.
func (o *OrderRequest) SetCancelTime(v time.Time) {
	o.CancelTime = &v
}

// GetComplexOrderStrategyType returns the ComplexOrderStrategyType field value if set, zero value otherwise.
func (o *OrderRequest) GetComplexOrderStrategyType() ComplexOrderStrategyType {
	if o == nil || IsNil(o.ComplexOrderStrategyType) {
		var ret ComplexOrderStrategyType
		return ret
	}
	return *o.ComplexOrderStrategyType
}

// GetComplexOrderStrategyTypeOk returns a tuple with the ComplexOrderStrategyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetComplexOrderStrategyTypeOk() (*ComplexOrderStrategyType, bool) {
	if o == nil || IsNil(o.ComplexOrderStrategyType) {
		return nil, false
	}
	return o.ComplexOrderStrategyType, true
}

// HasComplexOrderStrategyType returns a boolean if a field has been set.
func (o *OrderRequest) HasComplexOrderStrategyType() bool {
	if o != nil && !IsNil(o.ComplexOrderStrategyType) {
		return true
	}

	return false
}

// SetComplexOrderStrategyType gets a reference to the given ComplexOrderStrategyType and assigns it to the ComplexOrderStrategyType field.
func (o *OrderRequest) SetComplexOrderStrategyType(v ComplexOrderStrategyType) {
	o.ComplexOrderStrategyType = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *OrderRequest) GetQuantity() float64 {
	if o == nil || IsNil(o.Quantity) {
		var ret float64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *OrderRequest) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float64 and assigns it to the Quantity field.
func (o *OrderRequest) SetQuantity(v float64) {
	o.Quantity = &v
}

// GetFilledQuantity returns the FilledQuantity field value if set, zero value otherwise.
func (o *OrderRequest) GetFilledQuantity() float64 {
	if o == nil || IsNil(o.FilledQuantity) {
		var ret float64
		return ret
	}
	return *o.FilledQuantity
}

// GetFilledQuantityOk returns a tuple with the FilledQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetFilledQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.FilledQuantity) {
		return nil, false
	}
	return o.FilledQuantity, true
}

// HasFilledQuantity returns a boolean if a field has been set.
func (o *OrderRequest) HasFilledQuantity() bool {
	if o != nil && !IsNil(o.FilledQuantity) {
		return true
	}

	return false
}

// SetFilledQuantity gets a reference to the given float64 and assigns it to the FilledQuantity field.
func (o *OrderRequest) SetFilledQuantity(v float64) {
	o.FilledQuantity = &v
}

// GetRemainingQuantity returns the RemainingQuantity field value if set, zero value otherwise.
func (o *OrderRequest) GetRemainingQuantity() float64 {
	if o == nil || IsNil(o.RemainingQuantity) {
		var ret float64
		return ret
	}
	return *o.RemainingQuantity
}

// GetRemainingQuantityOk returns a tuple with the RemainingQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetRemainingQuantityOk() (*float64, bool) {
	if o == nil || IsNil(o.RemainingQuantity) {
		return nil, false
	}
	return o.RemainingQuantity, true
}

// HasRemainingQuantity returns a boolean if a field has been set.
func (o *OrderRequest) HasRemainingQuantity() bool {
	if o != nil && !IsNil(o.RemainingQuantity) {
		return true
	}

	return false
}

// SetRemainingQuantity gets a reference to the given float64 and assigns it to the RemainingQuantity field.
func (o *OrderRequest) SetRemainingQuantity(v float64) {
	o.RemainingQuantity = &v
}

// GetDestinationLinkName returns the DestinationLinkName field value if set, zero value otherwise.
func (o *OrderRequest) GetDestinationLinkName() string {
	if o == nil || IsNil(o.DestinationLinkName) {
		var ret string
		return ret
	}
	return *o.DestinationLinkName
}

// GetDestinationLinkNameOk returns a tuple with the DestinationLinkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetDestinationLinkNameOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationLinkName) {
		return nil, false
	}
	return o.DestinationLinkName, true
}

// HasDestinationLinkName returns a boolean if a field has been set.
func (o *OrderRequest) HasDestinationLinkName() bool {
	if o != nil && !IsNil(o.DestinationLinkName) {
		return true
	}

	return false
}

// SetDestinationLinkName gets a reference to the given string and assigns it to the DestinationLinkName field.
func (o *OrderRequest) SetDestinationLinkName(v string) {
	o.DestinationLinkName = &v
}

// GetReleaseTime returns the ReleaseTime field value if set, zero value otherwise.
func (o *OrderRequest) GetReleaseTime() time.Time {
	if o == nil || IsNil(o.ReleaseTime) {
		var ret time.Time
		return ret
	}
	return *o.ReleaseTime
}

// GetReleaseTimeOk returns a tuple with the ReleaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetReleaseTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReleaseTime) {
		return nil, false
	}
	return o.ReleaseTime, true
}

// HasReleaseTime returns a boolean if a field has been set.
func (o *OrderRequest) HasReleaseTime() bool {
	if o != nil && !IsNil(o.ReleaseTime) {
		return true
	}

	return false
}

// SetReleaseTime gets a reference to the given time.Time and assigns it to the ReleaseTime field.
func (o *OrderRequest) SetReleaseTime(v time.Time) {
	o.ReleaseTime = &v
}

// GetStopPrice returns the StopPrice field value if set, zero value otherwise.
func (o *OrderRequest) GetStopPrice() float64 {
	if o == nil || IsNil(o.StopPrice) {
		var ret float64
		return ret
	}
	return *o.StopPrice
}

// GetStopPriceOk returns a tuple with the StopPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStopPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.StopPrice) {
		return nil, false
	}
	return o.StopPrice, true
}

// HasStopPrice returns a boolean if a field has been set.
func (o *OrderRequest) HasStopPrice() bool {
	if o != nil && !IsNil(o.StopPrice) {
		return true
	}

	return false
}

// SetStopPrice gets a reference to the given float64 and assigns it to the StopPrice field.
func (o *OrderRequest) SetStopPrice(v float64) {
	o.StopPrice = &v
}

// GetStopPriceLinkBasis returns the StopPriceLinkBasis field value if set, zero value otherwise.
func (o *OrderRequest) GetStopPriceLinkBasis() StopPriceLinkBasis {
	if o == nil || IsNil(o.StopPriceLinkBasis) {
		var ret StopPriceLinkBasis
		return ret
	}
	return *o.StopPriceLinkBasis
}

// GetStopPriceLinkBasisOk returns a tuple with the StopPriceLinkBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStopPriceLinkBasisOk() (*StopPriceLinkBasis, bool) {
	if o == nil || IsNil(o.StopPriceLinkBasis) {
		return nil, false
	}
	return o.StopPriceLinkBasis, true
}

// HasStopPriceLinkBasis returns a boolean if a field has been set.
func (o *OrderRequest) HasStopPriceLinkBasis() bool {
	if o != nil && !IsNil(o.StopPriceLinkBasis) {
		return true
	}

	return false
}

// SetStopPriceLinkBasis gets a reference to the given StopPriceLinkBasis and assigns it to the StopPriceLinkBasis field.
func (o *OrderRequest) SetStopPriceLinkBasis(v StopPriceLinkBasis) {
	o.StopPriceLinkBasis = &v
}

// GetStopPriceLinkType returns the StopPriceLinkType field value if set, zero value otherwise.
func (o *OrderRequest) GetStopPriceLinkType() StopPriceLinkType {
	if o == nil || IsNil(o.StopPriceLinkType) {
		var ret StopPriceLinkType
		return ret
	}
	return *o.StopPriceLinkType
}

// GetStopPriceLinkTypeOk returns a tuple with the StopPriceLinkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStopPriceLinkTypeOk() (*StopPriceLinkType, bool) {
	if o == nil || IsNil(o.StopPriceLinkType) {
		return nil, false
	}
	return o.StopPriceLinkType, true
}

// HasStopPriceLinkType returns a boolean if a field has been set.
func (o *OrderRequest) HasStopPriceLinkType() bool {
	if o != nil && !IsNil(o.StopPriceLinkType) {
		return true
	}

	return false
}

// SetStopPriceLinkType gets a reference to the given StopPriceLinkType and assigns it to the StopPriceLinkType field.
func (o *OrderRequest) SetStopPriceLinkType(v StopPriceLinkType) {
	o.StopPriceLinkType = &v
}

// GetStopPriceOffset returns the StopPriceOffset field value if set, zero value otherwise.
func (o *OrderRequest) GetStopPriceOffset() float64 {
	if o == nil || IsNil(o.StopPriceOffset) {
		var ret float64
		return ret
	}
	return *o.StopPriceOffset
}

// GetStopPriceOffsetOk returns a tuple with the StopPriceOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStopPriceOffsetOk() (*float64, bool) {
	if o == nil || IsNil(o.StopPriceOffset) {
		return nil, false
	}
	return o.StopPriceOffset, true
}

// HasStopPriceOffset returns a boolean if a field has been set.
func (o *OrderRequest) HasStopPriceOffset() bool {
	if o != nil && !IsNil(o.StopPriceOffset) {
		return true
	}

	return false
}

// SetStopPriceOffset gets a reference to the given float64 and assigns it to the StopPriceOffset field.
func (o *OrderRequest) SetStopPriceOffset(v float64) {
	o.StopPriceOffset = &v
}

// GetStopType returns the StopType field value if set, zero value otherwise.
func (o *OrderRequest) GetStopType() StopType {
	if o == nil || IsNil(o.StopType) {
		var ret StopType
		return ret
	}
	return *o.StopType
}

// GetStopTypeOk returns a tuple with the StopType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStopTypeOk() (*StopType, bool) {
	if o == nil || IsNil(o.StopType) {
		return nil, false
	}
	return o.StopType, true
}

// HasStopType returns a boolean if a field has been set.
func (o *OrderRequest) HasStopType() bool {
	if o != nil && !IsNil(o.StopType) {
		return true
	}

	return false
}

// SetStopType gets a reference to the given StopType and assigns it to the StopType field.
func (o *OrderRequest) SetStopType(v StopType) {
	o.StopType = &v
}

// GetPriceLinkBasis returns the PriceLinkBasis field value if set, zero value otherwise.
func (o *OrderRequest) GetPriceLinkBasis() PriceLinkBasis {
	if o == nil || IsNil(o.PriceLinkBasis) {
		var ret PriceLinkBasis
		return ret
	}
	return *o.PriceLinkBasis
}

// GetPriceLinkBasisOk returns a tuple with the PriceLinkBasis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetPriceLinkBasisOk() (*PriceLinkBasis, bool) {
	if o == nil || IsNil(o.PriceLinkBasis) {
		return nil, false
	}
	return o.PriceLinkBasis, true
}

// HasPriceLinkBasis returns a boolean if a field has been set.
func (o *OrderRequest) HasPriceLinkBasis() bool {
	if o != nil && !IsNil(o.PriceLinkBasis) {
		return true
	}

	return false
}

// SetPriceLinkBasis gets a reference to the given PriceLinkBasis and assigns it to the PriceLinkBasis field.
func (o *OrderRequest) SetPriceLinkBasis(v PriceLinkBasis) {
	o.PriceLinkBasis = &v
}

// GetPriceLinkType returns the PriceLinkType field value if set, zero value otherwise.
func (o *OrderRequest) GetPriceLinkType() PriceLinkType {
	if o == nil || IsNil(o.PriceLinkType) {
		var ret PriceLinkType
		return ret
	}
	return *o.PriceLinkType
}

// GetPriceLinkTypeOk returns a tuple with the PriceLinkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetPriceLinkTypeOk() (*PriceLinkType, bool) {
	if o == nil || IsNil(o.PriceLinkType) {
		return nil, false
	}
	return o.PriceLinkType, true
}

// HasPriceLinkType returns a boolean if a field has been set.
func (o *OrderRequest) HasPriceLinkType() bool {
	if o != nil && !IsNil(o.PriceLinkType) {
		return true
	}

	return false
}

// SetPriceLinkType gets a reference to the given PriceLinkType and assigns it to the PriceLinkType field.
func (o *OrderRequest) SetPriceLinkType(v PriceLinkType) {
	o.PriceLinkType = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OrderRequest) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OrderRequest) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *OrderRequest) SetPrice(v float64) {
	o.Price = &v
}

// GetTaxLotMethod returns the TaxLotMethod field value if set, zero value otherwise.
func (o *OrderRequest) GetTaxLotMethod() TaxLotMethod {
	if o == nil || IsNil(o.TaxLotMethod) {
		var ret TaxLotMethod
		return ret
	}
	return *o.TaxLotMethod
}

// GetTaxLotMethodOk returns a tuple with the TaxLotMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetTaxLotMethodOk() (*TaxLotMethod, bool) {
	if o == nil || IsNil(o.TaxLotMethod) {
		return nil, false
	}
	return o.TaxLotMethod, true
}

// HasTaxLotMethod returns a boolean if a field has been set.
func (o *OrderRequest) HasTaxLotMethod() bool {
	if o != nil && !IsNil(o.TaxLotMethod) {
		return true
	}

	return false
}

// SetTaxLotMethod gets a reference to the given TaxLotMethod and assigns it to the TaxLotMethod field.
func (o *OrderRequest) SetTaxLotMethod(v TaxLotMethod) {
	o.TaxLotMethod = &v
}

// GetOrderLegCollection returns the OrderLegCollection field value if set, zero value otherwise.
func (o *OrderRequest) GetOrderLegCollection() []OrderLegCollection {
	if o == nil || IsNil(o.OrderLegCollection) {
		var ret []OrderLegCollection
		return ret
	}
	return o.OrderLegCollection
}

// GetOrderLegCollectionOk returns a tuple with the OrderLegCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetOrderLegCollectionOk() ([]OrderLegCollection, bool) {
	if o == nil || IsNil(o.OrderLegCollection) {
		return nil, false
	}
	return o.OrderLegCollection, true
}

// HasOrderLegCollection returns a boolean if a field has been set.
func (o *OrderRequest) HasOrderLegCollection() bool {
	if o != nil && !IsNil(o.OrderLegCollection) {
		return true
	}

	return false
}

// SetOrderLegCollection gets a reference to the given []OrderLegCollection and assigns it to the OrderLegCollection field.
func (o *OrderRequest) SetOrderLegCollection(v []OrderLegCollection) {
	o.OrderLegCollection = v
}

// GetActivationPrice returns the ActivationPrice field value if set, zero value otherwise.
func (o *OrderRequest) GetActivationPrice() float64 {
	if o == nil || IsNil(o.ActivationPrice) {
		var ret float64
		return ret
	}
	return *o.ActivationPrice
}

// GetActivationPriceOk returns a tuple with the ActivationPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetActivationPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.ActivationPrice) {
		return nil, false
	}
	return o.ActivationPrice, true
}

// HasActivationPrice returns a boolean if a field has been set.
func (o *OrderRequest) HasActivationPrice() bool {
	if o != nil && !IsNil(o.ActivationPrice) {
		return true
	}

	return false
}

// SetActivationPrice gets a reference to the given float64 and assigns it to the ActivationPrice field.
func (o *OrderRequest) SetActivationPrice(v float64) {
	o.ActivationPrice = &v
}

// GetSpecialInstruction returns the SpecialInstruction field value if set, zero value otherwise.
func (o *OrderRequest) GetSpecialInstruction() SpecialInstruction {
	if o == nil || IsNil(o.SpecialInstruction) {
		var ret SpecialInstruction
		return ret
	}
	return *o.SpecialInstruction
}

// GetSpecialInstructionOk returns a tuple with the SpecialInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetSpecialInstructionOk() (*SpecialInstruction, bool) {
	if o == nil || IsNil(o.SpecialInstruction) {
		return nil, false
	}
	return o.SpecialInstruction, true
}

// HasSpecialInstruction returns a boolean if a field has been set.
func (o *OrderRequest) HasSpecialInstruction() bool {
	if o != nil && !IsNil(o.SpecialInstruction) {
		return true
	}

	return false
}

// SetSpecialInstruction gets a reference to the given SpecialInstruction and assigns it to the SpecialInstruction field.
func (o *OrderRequest) SetSpecialInstruction(v SpecialInstruction) {
	o.SpecialInstruction = &v
}

// GetOrderStrategyType returns the OrderStrategyType field value if set, zero value otherwise.
func (o *OrderRequest) GetOrderStrategyType() OrderStrategyType {
	if o == nil || IsNil(o.OrderStrategyType) {
		var ret OrderStrategyType
		return ret
	}
	return *o.OrderStrategyType
}

// GetOrderStrategyTypeOk returns a tuple with the OrderStrategyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetOrderStrategyTypeOk() (*OrderStrategyType, bool) {
	if o == nil || IsNil(o.OrderStrategyType) {
		return nil, false
	}
	return o.OrderStrategyType, true
}

// HasOrderStrategyType returns a boolean if a field has been set.
func (o *OrderRequest) HasOrderStrategyType() bool {
	if o != nil && !IsNil(o.OrderStrategyType) {
		return true
	}

	return false
}

// SetOrderStrategyType gets a reference to the given OrderStrategyType and assigns it to the OrderStrategyType field.
func (o *OrderRequest) SetOrderStrategyType(v OrderStrategyType) {
	o.OrderStrategyType = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderRequest) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderRequest) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *OrderRequest) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetCancelable returns the Cancelable field value if set, zero value otherwise.
func (o *OrderRequest) GetCancelable() bool {
	if o == nil || IsNil(o.Cancelable) {
		var ret bool
		return ret
	}
	return *o.Cancelable
}

// GetCancelableOk returns a tuple with the Cancelable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetCancelableOk() (*bool, bool) {
	if o == nil || IsNil(o.Cancelable) {
		return nil, false
	}
	return o.Cancelable, true
}

// HasCancelable returns a boolean if a field has been set.
func (o *OrderRequest) HasCancelable() bool {
	if o != nil && !IsNil(o.Cancelable) {
		return true
	}

	return false
}

// SetCancelable gets a reference to the given bool and assigns it to the Cancelable field.
func (o *OrderRequest) SetCancelable(v bool) {
	o.Cancelable = &v
}

// GetEditable returns the Editable field value if set, zero value otherwise.
func (o *OrderRequest) GetEditable() bool {
	if o == nil || IsNil(o.Editable) {
		var ret bool
		return ret
	}
	return *o.Editable
}

// GetEditableOk returns a tuple with the Editable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.Editable) {
		return nil, false
	}
	return o.Editable, true
}

// HasEditable returns a boolean if a field has been set.
func (o *OrderRequest) HasEditable() bool {
	if o != nil && !IsNil(o.Editable) {
		return true
	}

	return false
}

// SetEditable gets a reference to the given bool and assigns it to the Editable field.
func (o *OrderRequest) SetEditable(v bool) {
	o.Editable = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OrderRequest) GetStatus() Status {
	if o == nil || IsNil(o.Status) {
		var ret Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStatusOk() (*Status, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OrderRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Status and assigns it to the Status field.
func (o *OrderRequest) SetStatus(v Status) {
	o.Status = &v
}

// GetEnteredTime returns the EnteredTime field value if set, zero value otherwise.
func (o *OrderRequest) GetEnteredTime() time.Time {
	if o == nil || IsNil(o.EnteredTime) {
		var ret time.Time
		return ret
	}
	return *o.EnteredTime
}

// GetEnteredTimeOk returns a tuple with the EnteredTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetEnteredTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EnteredTime) {
		return nil, false
	}
	return o.EnteredTime, true
}

// HasEnteredTime returns a boolean if a field has been set.
func (o *OrderRequest) HasEnteredTime() bool {
	if o != nil && !IsNil(o.EnteredTime) {
		return true
	}

	return false
}

// SetEnteredTime gets a reference to the given time.Time and assigns it to the EnteredTime field.
func (o *OrderRequest) SetEnteredTime(v time.Time) {
	o.EnteredTime = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise.
func (o *OrderRequest) GetCloseTime() time.Time {
	if o == nil || IsNil(o.CloseTime) {
		var ret time.Time
		return ret
	}
	return *o.CloseTime
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetCloseTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CloseTime) {
		return nil, false
	}
	return o.CloseTime, true
}

// HasCloseTime returns a boolean if a field has been set.
func (o *OrderRequest) HasCloseTime() bool {
	if o != nil && !IsNil(o.CloseTime) {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given time.Time and assigns it to the CloseTime field.
func (o *OrderRequest) SetCloseTime(v time.Time) {
	o.CloseTime = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *OrderRequest) GetAccountNumber() int64 {
	if o == nil || IsNil(o.AccountNumber) {
		var ret int64
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetAccountNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *OrderRequest) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given int64 and assigns it to the AccountNumber field.
func (o *OrderRequest) SetAccountNumber(v int64) {
	o.AccountNumber = &v
}

// GetOrderActivityCollection returns the OrderActivityCollection field value if set, zero value otherwise.
func (o *OrderRequest) GetOrderActivityCollection() []OrderActivity {
	if o == nil || IsNil(o.OrderActivityCollection) {
		var ret []OrderActivity
		return ret
	}
	return o.OrderActivityCollection
}

// GetOrderActivityCollectionOk returns a tuple with the OrderActivityCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetOrderActivityCollectionOk() ([]OrderActivity, bool) {
	if o == nil || IsNil(o.OrderActivityCollection) {
		return nil, false
	}
	return o.OrderActivityCollection, true
}

// HasOrderActivityCollection returns a boolean if a field has been set.
func (o *OrderRequest) HasOrderActivityCollection() bool {
	if o != nil && !IsNil(o.OrderActivityCollection) {
		return true
	}

	return false
}

// SetOrderActivityCollection gets a reference to the given []OrderActivity and assigns it to the OrderActivityCollection field.
func (o *OrderRequest) SetOrderActivityCollection(v []OrderActivity) {
	o.OrderActivityCollection = v
}

// GetReplacingOrderCollection returns the ReplacingOrderCollection field value if set, zero value otherwise.
func (o *OrderRequest) GetReplacingOrderCollection() []OrderRequest {
	if o == nil || IsNil(o.ReplacingOrderCollection) {
		var ret []OrderRequest
		return ret
	}
	return o.ReplacingOrderCollection
}

// GetReplacingOrderCollectionOk returns a tuple with the ReplacingOrderCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetReplacingOrderCollectionOk() ([]OrderRequest, bool) {
	if o == nil || IsNil(o.ReplacingOrderCollection) {
		return nil, false
	}
	return o.ReplacingOrderCollection, true
}

// HasReplacingOrderCollection returns a boolean if a field has been set.
func (o *OrderRequest) HasReplacingOrderCollection() bool {
	if o != nil && !IsNil(o.ReplacingOrderCollection) {
		return true
	}

	return false
}

// SetReplacingOrderCollection gets a reference to the given []OrderRequest and assigns it to the ReplacingOrderCollection field.
func (o *OrderRequest) SetReplacingOrderCollection(v []OrderRequest) {
	o.ReplacingOrderCollection = v
}

// GetChildOrderStrategies returns the ChildOrderStrategies field value if set, zero value otherwise.
func (o *OrderRequest) GetChildOrderStrategies() []OrderRequest {
	if o == nil || IsNil(o.ChildOrderStrategies) {
		var ret []OrderRequest
		return ret
	}
	return o.ChildOrderStrategies
}

// GetChildOrderStrategiesOk returns a tuple with the ChildOrderStrategies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetChildOrderStrategiesOk() ([]OrderRequest, bool) {
	if o == nil || IsNil(o.ChildOrderStrategies) {
		return nil, false
	}
	return o.ChildOrderStrategies, true
}

// HasChildOrderStrategies returns a boolean if a field has been set.
func (o *OrderRequest) HasChildOrderStrategies() bool {
	if o != nil && !IsNil(o.ChildOrderStrategies) {
		return true
	}

	return false
}

// SetChildOrderStrategies gets a reference to the given []OrderRequest and assigns it to the ChildOrderStrategies field.
func (o *OrderRequest) SetChildOrderStrategies(v []OrderRequest) {
	o.ChildOrderStrategies = v
}

// GetStatusDescription returns the StatusDescription field value if set, zero value otherwise.
func (o *OrderRequest) GetStatusDescription() string {
	if o == nil || IsNil(o.StatusDescription) {
		var ret string
		return ret
	}
	return *o.StatusDescription
}

// GetStatusDescriptionOk returns a tuple with the StatusDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderRequest) GetStatusDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDescription) {
		return nil, false
	}
	return o.StatusDescription, true
}

// HasStatusDescription returns a boolean if a field has been set.
func (o *OrderRequest) HasStatusDescription() bool {
	if o != nil && !IsNil(o.StatusDescription) {
		return true
	}

	return false
}

// SetStatusDescription gets a reference to the given string and assigns it to the StatusDescription field.
func (o *OrderRequest) SetStatusDescription(v string) {
	o.StatusDescription = &v
}

func (o OrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Session) {
		toSerialize["session"] = o.Session
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.OrderType) {
		toSerialize["orderType"] = o.OrderType
	}
	if !IsNil(o.CancelTime) {
		toSerialize["cancelTime"] = o.CancelTime
	}
	if !IsNil(o.ComplexOrderStrategyType) {
		toSerialize["complexOrderStrategyType"] = o.ComplexOrderStrategyType
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.FilledQuantity) {
		toSerialize["filledQuantity"] = o.FilledQuantity
	}
	if !IsNil(o.RemainingQuantity) {
		toSerialize["remainingQuantity"] = o.RemainingQuantity
	}
	if !IsNil(o.DestinationLinkName) {
		toSerialize["destinationLinkName"] = o.DestinationLinkName
	}
	if !IsNil(o.ReleaseTime) {
		toSerialize["releaseTime"] = o.ReleaseTime
	}
	if !IsNil(o.StopPrice) {
		toSerialize["stopPrice"] = o.StopPrice
	}
	if !IsNil(o.StopPriceLinkBasis) {
		toSerialize["stopPriceLinkBasis"] = o.StopPriceLinkBasis
	}
	if !IsNil(o.StopPriceLinkType) {
		toSerialize["stopPriceLinkType"] = o.StopPriceLinkType
	}
	if !IsNil(o.StopPriceOffset) {
		toSerialize["stopPriceOffset"] = o.StopPriceOffset
	}
	if !IsNil(o.StopType) {
		toSerialize["stopType"] = o.StopType
	}
	if !IsNil(o.PriceLinkBasis) {
		toSerialize["priceLinkBasis"] = o.PriceLinkBasis
	}
	if !IsNil(o.PriceLinkType) {
		toSerialize["priceLinkType"] = o.PriceLinkType
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.TaxLotMethod) {
		toSerialize["taxLotMethod"] = o.TaxLotMethod
	}
	if !IsNil(o.OrderLegCollection) {
		toSerialize["orderLegCollection"] = o.OrderLegCollection
	}
	if !IsNil(o.ActivationPrice) {
		toSerialize["activationPrice"] = o.ActivationPrice
	}
	if !IsNil(o.SpecialInstruction) {
		toSerialize["specialInstruction"] = o.SpecialInstruction
	}
	if !IsNil(o.OrderStrategyType) {
		toSerialize["orderStrategyType"] = o.OrderStrategyType
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.Cancelable) {
		toSerialize["cancelable"] = o.Cancelable
	}
	if !IsNil(o.Editable) {
		toSerialize["editable"] = o.Editable
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.EnteredTime) {
		toSerialize["enteredTime"] = o.EnteredTime
	}
	if !IsNil(o.CloseTime) {
		toSerialize["closeTime"] = o.CloseTime
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !IsNil(o.OrderActivityCollection) {
		toSerialize["orderActivityCollection"] = o.OrderActivityCollection
	}
	if !IsNil(o.ReplacingOrderCollection) {
		toSerialize["replacingOrderCollection"] = o.ReplacingOrderCollection
	}
	if !IsNil(o.ChildOrderStrategies) {
		toSerialize["childOrderStrategies"] = o.ChildOrderStrategies
	}
	if !IsNil(o.StatusDescription) {
		toSerialize["statusDescription"] = o.StatusDescription
	}
	return toSerialize, nil
}

type NullableOrderRequest struct {
	value *OrderRequest
	isSet bool
}

func (v NullableOrderRequest) Get() *OrderRequest {
	return v.value
}

func (v *NullableOrderRequest) Set(val *OrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderRequest(val *OrderRequest) *NullableOrderRequest {
	return &NullableOrderRequest{value: val, isSet: true}
}

func (v NullableOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


