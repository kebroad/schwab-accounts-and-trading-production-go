/*
Trader API - Account Access and User Preferences

Schwab Trader API access to Account, Order entry and User Preferences

API version: 1.0.0
Contact: TraderAPI@Schwab.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the TransferItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferItem{}

// TransferItem struct for TransferItem
type TransferItem struct {
	Instrument interface{} `json:"instrument,omitempty"`
	Amount *float64 `json:"amount,omitempty"`
	Cost *float64 `json:"cost,omitempty"`
	Price *float64 `json:"price,omitempty"`
	FeeType *string `json:"feeType,omitempty"`
	PositionEffect *string `json:"positionEffect,omitempty"`
}

// NewTransferItem instantiates a new TransferItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferItem() *TransferItem {
	this := TransferItem{}
	return &this
}

// NewTransferItemWithDefaults instantiates a new TransferItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferItemWithDefaults() *TransferItem {
	this := TransferItem{}
	return &this
}

// GetInstrument returns the Instrument field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferItem) GetInstrument() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Instrument
}

// GetInstrumentOk returns a tuple with the Instrument field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferItem) GetInstrumentOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Instrument) {
		return nil, false
	}
	return &o.Instrument, true
}

// HasInstrument returns a boolean if a field has been set.
func (o *TransferItem) HasInstrument() bool {
	if o != nil && !IsNil(o.Instrument) {
		return true
	}

	return false
}

// SetInstrument gets a reference to the given interface{} and assigns it to the Instrument field.
func (o *TransferItem) SetInstrument(v interface{}) {
	o.Instrument = v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *TransferItem) GetAmount() float64 {
	if o == nil || IsNil(o.Amount) {
		var ret float64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferItem) GetAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *TransferItem) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float64 and assigns it to the Amount field.
func (o *TransferItem) SetAmount(v float64) {
	o.Amount = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *TransferItem) GetCost() float64 {
	if o == nil || IsNil(o.Cost) {
		var ret float64
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferItem) GetCostOk() (*float64, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *TransferItem) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float64 and assigns it to the Cost field.
func (o *TransferItem) SetCost(v float64) {
	o.Cost = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *TransferItem) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferItem) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *TransferItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *TransferItem) SetPrice(v float64) {
	o.Price = &v
}

// GetFeeType returns the FeeType field value if set, zero value otherwise.
func (o *TransferItem) GetFeeType() string {
	if o == nil || IsNil(o.FeeType) {
		var ret string
		return ret
	}
	return *o.FeeType
}

// GetFeeTypeOk returns a tuple with the FeeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferItem) GetFeeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FeeType) {
		return nil, false
	}
	return o.FeeType, true
}

// HasFeeType returns a boolean if a field has been set.
func (o *TransferItem) HasFeeType() bool {
	if o != nil && !IsNil(o.FeeType) {
		return true
	}

	return false
}

// SetFeeType gets a reference to the given string and assigns it to the FeeType field.
func (o *TransferItem) SetFeeType(v string) {
	o.FeeType = &v
}

// GetPositionEffect returns the PositionEffect field value if set, zero value otherwise.
func (o *TransferItem) GetPositionEffect() string {
	if o == nil || IsNil(o.PositionEffect) {
		var ret string
		return ret
	}
	return *o.PositionEffect
}

// GetPositionEffectOk returns a tuple with the PositionEffect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferItem) GetPositionEffectOk() (*string, bool) {
	if o == nil || IsNil(o.PositionEffect) {
		return nil, false
	}
	return o.PositionEffect, true
}

// HasPositionEffect returns a boolean if a field has been set.
func (o *TransferItem) HasPositionEffect() bool {
	if o != nil && !IsNil(o.PositionEffect) {
		return true
	}

	return false
}

// SetPositionEffect gets a reference to the given string and assigns it to the PositionEffect field.
func (o *TransferItem) SetPositionEffect(v string) {
	o.PositionEffect = &v
}

func (o TransferItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Instrument != nil {
		toSerialize["instrument"] = o.Instrument
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.FeeType) {
		toSerialize["feeType"] = o.FeeType
	}
	if !IsNil(o.PositionEffect) {
		toSerialize["positionEffect"] = o.PositionEffect
	}
	return toSerialize, nil
}

type NullableTransferItem struct {
	value *TransferItem
	isSet bool
}

func (v NullableTransferItem) Get() *TransferItem {
	return v.value
}

func (v *NullableTransferItem) Set(val *TransferItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferItem(val *TransferItem) *NullableTransferItem {
	return &NullableTransferItem{value: val, isSet: true}
}

func (v NullableTransferItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


